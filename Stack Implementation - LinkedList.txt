package stack;

import java.util.Scanner;

public class StackLinkedList {
    // Top of the stack
    private Node top;

    // Inner class to define a node
    private static class Node {
        int value;
        Node next;

        Node(int value) {
            this.value = value;
        }
    }

    // Push an element onto the stack
    public void push(int item) {
        Node newNode = new Node(item); // Create a new node
        newNode.next = top; // Link the new node to the top
        top = newNode; // Update the top to the new node
    }

    // Pop an element from the stack
    public int pop() {
        if (isEmpty()) { // Check if stack is empty
            throw new IllegalStateException("Stack is Empty");
        }
        int value = top.value; // Get the value from the top
        top = top.next; // Move the top to the next node
        return value;
    }

    // Peek at the top element of the stack without removing it
    public int peek() {
        if (isEmpty()) { // Check if stack is empty
            throw new IllegalStateException("Stack is Empty");
        }
        return top.value; // Return the value of the top node
    }

    // Check if the stack is empty
    public boolean isEmpty() {
        return top == null;
    }

    // Get the size of the stack
    public int size() {
        int count = 0;
        Node current = top;
        while (current != null) {
            count++;
            current = current.next;
        }
        return count;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        // Get stack size
        System.out.print("Enter your stack Size = ");
        int size = sc.nextInt();
        // Create stack
        StackLinkedList stack = new StackLinkedList();

        // Push operation
        for (int i = 0; i < size; i++) {
            System.out.printf("Enter your Number %d to push =", i + 1);
            int num = sc.nextInt();
            stack.push(num);
        }

        // Using stack operations
        System.out.println("---------------------------------");
        System.out.println("Top element is: " + stack.peek());
        System.out.println("Stack size is: " + stack.size());
        System.out.println("---------------------------------");
        System.out.println("Popped element is: " + stack.pop());
        System.out.println("---------------------------------");
        System.out.println("Top element is: " + stack.peek());
        System.out.println("Stack size is: " + stack.size());

        System.out.println("---------------------------------");
        sc.close();
    }
}
