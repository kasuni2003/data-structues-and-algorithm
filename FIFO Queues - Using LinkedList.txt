import java.util.Scanner;

public class AnotherLinkedListQueue {
    private Node front, rear;
    private int size;

    // Node class to represent elements in the queue
    private class Node {
        int data;
        Node next;

        Node(int data) {
            this.data = data;
        }
    }

    // Constructor
    public AnotherLinkedListQueue() {
        this.front = this.rear = null;
        this.size = 0;
    }

    // Method to add an item to the queue
    public void enqueue(int item) {
        Node newNode = new Node(item);
        if (isEmpty()) {
            front = newNode;
        } else {
            rear.next = newNode;
        }
        rear = newNode;
        size++;
    }

    // Method to remove an item from the queue
    public int dequeue() {
        if (isEmpty()) {
            System.out.println("Queue is empty");
            return -1; // Return a default value indicating failure
        }
        int item = front.data;
        front = front.next;
        if (front == null) {
            rear = null;
        }
        size--;
        return item;
    }

    // Method to check the front item of the queue
    public int front() {
        if (isEmpty()) {
            System.out.println("Queue is empty");
            return -1; // Return a default value indicating failure
        }
        return front.data;
    }

    // Method to check if the queue is empty
    public boolean isEmpty() {
        return front == null;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // Get queue size
        System.out.print("Enter your queue Size = ");
        int size = sc.nextInt();

        AnotherLinkedListQueue queue = new AnotherLinkedListQueue();

        // Enqueue to queue
        for (int i = 0; i < size; i++) {
            System.out.printf("Enter your Number %d to push =", i + 1);
            int num = sc.nextInt();
            queue.enqueue(num);
        }

        System.out.println("---------------------------------");
        System.out.println("Front item is: " + queue.front());
        System.out.println("Dequeued item is: " + queue.dequeue());
        System.out.println("Front item is: " + queue.front());
        System.out.println("---------------------------------");
        sc.close();
    }
}
